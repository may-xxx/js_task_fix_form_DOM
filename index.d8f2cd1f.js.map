{"mappings":"ACEA,IAAM,EAAS,SAAS,gBAAgB,CAAC,eAEpC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAe,CAAA,CAAA,OAAA,QAAA,CAAA,GAAf,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAuB,CAAvB,IAAM,EAAN,EAAA,KAAA,CACG,EAAY,EAAM,EAAE,CAEpB,EAAQ,SAAS,aAAa,CAAC,QAErC,CAAA,EAAM,SAAS,CAAG,cAClB,EAAM,YAAY,CAAC,MAAO,GAE1B,IAAM,EAAY,EAAM,IAAI,CAAC,OAAO,CAAC,kBAAmB,QAExD,CAAA,EAAM,WAAW,CAAG,EAEpB,IAAM,EACJ,EAAU,MAAM,CAAC,GAAG,WAAW,GAAK,EAAU,KAAK,CAAC,GAEtD,EAAM,YAAY,CAAC,cAAe,GAElC,EAAM,UAAU,CAAC,WAAW,CAAC,EAC/B,C,C,M,E,CAlBK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar inputs = document.querySelectorAll(\".field-text\");\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var input = _step.value;\n        var elementId = input.id;\n        var label = document.createElement(\"label\");\n        label.className = \"field-label\";\n        label.setAttribute(\"for\", elementId);\n        var labelText = input.name.replace(/([a-z])([A-Z])/g, \"$1 $2\");\n        label.textContent = labelText;\n        var capitalizedPlaceholder = labelText.charAt(0).toUpperCase() + labelText.slice(1);\n        input.setAttribute(\"placeholder\", capitalizedPlaceholder);\n        input.parentNode.appendChild(label);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\n\n//# sourceMappingURL=index.d8f2cd1f.js.map\n","'use strict';\n\nconst inputs = document.querySelectorAll('.field-text');\n\nfor (const input of inputs) {\n  const elementId = input.id;\n\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.setAttribute('for', elementId);\n\n  const labelText = input.name.replace(/([a-z])([A-Z])/g, '$1 $2');\n\n  label.textContent = labelText;\n\n  const capitalizedPlaceholder =\n    labelText.charAt(0).toUpperCase() + labelText.slice(1);\n\n  input.setAttribute('placeholder', capitalizedPlaceholder);\n\n  input.parentNode.appendChild(label);\n}\n"],"names":["inputs","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","input","value","elementId","id","label","createElement","className","setAttribute","labelText","name","replace","textContent","capitalizedPlaceholder","charAt","toUpperCase","slice","parentNode","appendChild","err","return"],"version":3,"file":"index.d8f2cd1f.js.map"}